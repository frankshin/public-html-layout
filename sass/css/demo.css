@charset "UTF-8";
.menu {
  color: #fff;
  font-size: 12px;
}

.box {
  color: red;
}

/**/
nav ul {
  margin: 0;
  padding: 0;
  list-style: none;
}
nav li {
  display: inline-block;
}
nav a {
  display: block;
  padding: 6px 12px;
  text-decoration: none;
}

.box2 {
  width: 200px;
}

/*全局变量&局部变量*/
.block {
  color: orange;
}

.box5 a {
  color: red;
}

span {
  color: orange;
}

/*选择器嵌套*/
nav a {
  color: red;
}
header nav a {
  color: green;
}

/*属性嵌套*/
.box6 {
  border-top: 1px solid red;
  border-bottom: 1px solid green;
}

/*伪类嵌套*/
.clearfix:before, .clearfix:after {
  content: "";
  display: table;
}
.clearfix:after {
  clear: both;
  overflow: hidden;
}

/*混合宏-声明混合宏*/
/*带值的参数*/
/*调用混合宏*/
button {
  -webkit-border-radius: 5px;
  border-radius: 5px;
}

.box7 {
  -webkit-border-radius: 3px;
  border-radius: 3px;
}

/*不带值的参数&多个参数*/
.box-center {
  width: 500px;
  height: 300px;
  position: absolute;
  top: 50%;
  left: 50%;
  margin-top: -150px;
  margin-left: -250px;
}

/*复杂的混合宏：带有逻辑关系&参数过多之时，用...代替*/
.box8 {
  -webkit-box-shadow: 0 0 1px rgba(0, 0, 0, 0.5), 0 0 2px rgba(0, 0, 0, 0.2);
  box-shadow: 0 0 1px rgba(0, 0, 0, 0.5), 0 0 2px rgba(0, 0, 0, 0.2);
}

.box9 {
  -webkit-box-shadow: 0 0 2px rgba(0, 0, 0, 0.25);
  box-shadow: 0 0 2px rgba(0, 0, 0, 0.25);
}

/*
*混合宏
*优点：复用重复代码块。适合使用情况：代码块中涉及到变量
*缺点：不能智能的将相同的样式代码块合并在一起。

*继承&占位符：
*优点：能将相同的样式代码块合并在一起。适合使用情况：代码块不需要传任何变量参数
*缺点：不能传变量参数

*继承：首先有一个基类存在，调不调用都会产生代码
*占位符：独立定义，不调用不会产生代码
*/
/*扩展/继承*/
.btn, .btn-primary, .btn-second {
  border: 1px solid #ccc;
  padding: 6px 10px;
  font-size: 14px;
}

.btn-primary {
  background-color: #f36;
  color: #fff;
}

.btn-second {
  background-color: orange;
  color: #fff;
}

/* 占位符%placeholder */
.btn2, .block {
  margin-top: 5px;
}

.btn2, .block span {
  padding-top: 5px;
}

.login-box {
  margin-top: 14px;
  padding-top: 14px;
}

/*构建一个选择器*/
.header-text-small {
  font-size: 12px;
}

.header-text-medium {
  font-size: 20px;
}

.header-text-big {
  font-size: 40px;
}

/*@extend use of 插值*/
.navigation {
  margin-top: 20px;
  background: #F00;
}

.selected-status, .navigation {
  font-weight: bold;
}

/*sass的运算*/
/*加法*/
.box10 {
  width: 788px;
}

/*减法*/
.box11 {
  width: -748px;
}

/*乘法*/
.icon-twitter {
  background-postion: 0 -20;
}

.icon-facebook {
  background-postion: 0 -40;
}

.icon-github {
  background-postion: 0 -60;
}

.icon-weibo {
  background-postion: 0 -80;
}

/*除法*/
.box12 {
  width: 100px / 2;
}

.box13 {
  width: 50px;
}

.box14 {
  width: 242px;
}

/*变量计算*/
.item {
  width: 100px;
}

.list {
  width: 100px;
}

p {
  font: 10px/8px;
  width: 500px;
  width: 1;
  height: 250px;
  margin-left: 9px;
}

.box15 {
  width: 10;
}

/*数字运算*/
.box16 {
  width: 60px;
}

/*每列宽度*/
.col-1 {
  width: 40px;
}

.col-2 {
  width: 40px;
}

.col-3 {
  width: 40px;
}

.col-4 {
  width: 40px;
}

.col-5 {
  width: 40px;
}

.col-6 {
  width: 40px;
}

.col-7 {
  width: 40px;
}

.col-8 {
  width: 40px;
}

.col-9 {
  width: 40px;
}

.col-10 {
  width: 40px;
}

.col-11 {
  width: 40px;
}

.col-12 {
  width: 40px;
}

/*颜色运算*/
p {
  color: #050709;
  color: #020406;
}

/*字符运算*/
.box:before {
  content: " Hello Sass! ";
}

div {
  cursor: e-resize;
}

/*注意引号*/
p:before {
  content: "Foo Bar";
  font-family: sans-serif;
}

/******************************进阶篇******************************/
.block {
  display: block;
}

.hidden {
  display: none;
}

/* for循环上篇 */
/*through*/
.item-1 {
  width: 2em;
}

.item-2 {
  width: 4em;
}

.item-3 {
  width: 6em;
}

/*to*/
.item-1 {
  width: 2em;
}

.item-2 {
  width: 4em;
}

/* 下篇（through和to输出结果一样） */
.span1, .span2, .span3, .span4, .span5, .span6, .span7, .span8, .span9, .span10, .span11, .span12 {
  float: left;
  margin-left: 10px;
  margin-right: 10px;
}

.span1 {
  width: 60px;
}

.span2 {
  width: 140px;
}

.span3 {
  width: 220px;
}

.span4 {
  width: 300px;
}

.span5 {
  width: 380px;
}

.span6 {
  width: 460px;
}

.span7 {
  width: 540px;
}

.span8 {
  width: 620px;
}

.span9 {
  width: 700px;
}

.span10 {
  width: 780px;
}

.span11 {
  width: 860px;
}

.span12 {
  width: 940px;
}

.span1 {
  width: 60px;
}

.span2 {
  width: 140px;
}

.span3 {
  width: 220px;
}

.span4 {
  width: 300px;
}

.span5 {
  width: 380px;
}

.span6 {
  width: 460px;
}

.span7 {
  width: 540px;
}

.span8 {
  width: 620px;
}

.span9 {
  width: 700px;
}

.span10 {
  width: 780px;
}

.span11 {
  width: 860px;
}

.span12 {
  width: 940px;
}

/*while循环*/
.while-4 {
  width: 24px;
}

.while-3 {
  width: 23px;
}

.while-2 {
  width: 22px;
}

.while-1 {
  width: 21px;
}

/* @each 循环指令的形式：@each $var in <list> */
.author-bio .photo-adam {
  background: url("/images/avatars/adam.png") no-repeat;
}
.author-bio .photo-john {
  background: url("/images/avatars/john.png") no-repeat;
}
.author-bio .photo-wynn {
  background: url("/images/avatars/wynn.png") no-repeat;
}
.author-bio .photo-mason {
  background: url("/images/avatars/mason.png") no-repeat;
}
.author-bio .photo-kuroir {
  background: url("/images/avatars/kuroir.png") no-repeat;
}

/*# sourceMappingURL=demo.css.map */
